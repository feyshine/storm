<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.cn.hnust.dao.SignMapper" >
  <resultMap id="BaseResultMap" type="com.cn.hnust.pojo.Sign" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="signature" property="signature" jdbcType="VARCHAR" />
    <result column="timestamp" property="timestamp" jdbcType="VARCHAR" />
    <result column="nonce" property="nonce" jdbcType="VARCHAR" />
    <result column="echostr" property="echostr" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    id, signature, timestamp, nonce, echostr
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from sign
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from sign
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.cn.hnust.pojo.Sign" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into sign (id, signature, timestamp, 
      nonce, echostr)
    values (#{id,jdbcType=INTEGER}, #{signature,jdbcType=VARCHAR}, #{timestamp,jdbcType=VARCHAR}, 
      #{nonce,jdbcType=VARCHAR}, #{echostr,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.cn.hnust.pojo.Sign" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into sign
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="signature != null" >
        signature,
      </if>
      <if test="timestamp != null" >
        timestamp,
      </if>
      <if test="nonce != null" >
        nonce,
      </if>
      <if test="echostr != null" >
        echostr,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="signature != null" >
        #{signature,jdbcType=VARCHAR},
      </if>
      <if test="timestamp != null" >
        #{timestamp,jdbcType=VARCHAR},
      </if>
      <if test="nonce != null" >
        #{nonce,jdbcType=VARCHAR},
      </if>
      <if test="echostr != null" >
        #{echostr,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.cn.hnust.pojo.Sign" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update sign
    <set >
      <if test="signature != null" >
        signature = #{signature,jdbcType=VARCHAR},
      </if>
      <if test="timestamp != null" >
        timestamp = #{timestamp,jdbcType=VARCHAR},
      </if>
      <if test="nonce != null" >
        nonce = #{nonce,jdbcType=VARCHAR},
      </if>
      <if test="echostr != null" >
        echostr = #{echostr,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.cn.hnust.pojo.Sign" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update sign
    set signature = #{signature,jdbcType=VARCHAR},
      timestamp = #{timestamp,jdbcType=VARCHAR},
      nonce = #{nonce,jdbcType=VARCHAR},
      echostr = #{echostr,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>